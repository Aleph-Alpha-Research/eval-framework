[project]
name = "eval-framework"
version = "0.1.14"
description = "Evalulation Framework"
readme = "README.md"
dynamic = ["dependencies"]
license = { file = "LICENSE" }
requires-python = ">=3.12,<3.13"
authors = [
  { name = "Aleph Alpha Research" }
]
dependencies = [
  "pyyaml>=6.0.1,<7",
  "xmltodict>=0.13.0,<0.14",
  "pydantic>=2.7,<3",
  "datasets>=2.19.1,<4", # dataset v4 has breaking changes we'd need to adapt to
  "sacrebleu>=2.4.3,<3",
  "pycountry>=24.6.1,<25",
  "nltk>=3.9.1,<4",
  "types-pyyaml>=6.0.12.20240917,<7",
  "psutil>=6.1,<7",
  "python-dotenv>=1.0.1,<2",
  "lingua-language-detector>=2.0.2,<3",
  "google-crc32c>=1.5.0,<2",
  "kubernetes>=31.0.0,<32",  # required by llm-sandbox though actually not needed
  "seaborn>=0.13.2,<0.14",
  "langdetect>=1.0.9,<2",  # required by the original ifeval implementation
  "spacy>=3.8.3,<4",
  "jsonschema>=4.23.0,<5",
  "mysql-connector-python>=9.0.0,<10",  # required for sql-related tasks
  "psycopg2-binary>=2.9.9,<3",  # required for sql-related tasks
  "redis>=5.2.1,<6",
  "sympy==1.13.1",
  "antlr4-python3-runtime==4.11.1",
  "llm-sandbox[docker]==0.1.8",
  "jsonlines>=4,<5",
  "types-python-dateutil>=2.9.0.20241206,<3",
  "types-requests>=2.32.0.20250328,<3",
  "toml>=0.10.2,<0.11",
  "lxml>=6,<7",
  "aenum>=3.1.16,<4",
  "python-iso639>=2025.2.18",
  "typing-extensions>=4.14,<5",
  "unbabel-comet>=2.2.6,<3",
  "wandb>=0.21.1",
]

[project.optional-dependencies]
determined = [
  "determined>=0.38,<0.39",
  "tensorboard==2.19.0"
]
api = ["aleph-alpha-client>=10,<11"]
openai = [
  "openai>=1.62,<2",
  "tiktoken>=0.9,<0.10"
]
# Transformers must be an optional dependency because these need the latest flash attention, which is not compatible
# with the nvidia base image with torch=2.4 used in scaling.
transformers = ["transformers>=4.45.2,<5", "torch"]
accelerate = ["accelerate"]
vllm = [
  "vllm>=0.8.5,<0.9",
  "torch"
]
# from template-formatting
optional = [
  "transformers>=4.45.2,<5",
  "jinja2>=3.1.6,<4"
]
mistral = [
  "mistral-common>=1.7,<2",
  "huggingface-hub>=0.33.2,<0.34",
]

[project.urls]
repository = "https://github.com/Aleph-Alpha-Research/eval-framework"

[project.scripts]
eval_framework = "eval_framework.run:run"

[tool.poetry]
packages = [
  { include = "eval_framework", from = "src" },
  { include = "template_formatting", from = "src" }
]

[tool.poetry.dependencies]
determined = { optional = true, git = "https://github.com/mys007/determined.git", subdirectory = "harness"}  # fork with unpinned `requests`
# We don't overwrite system libraries in Docker image (unlike scaling) so we don't need to freeze torch version.
torch = { version = "*", source = "pytorch-cu124",  optional=true}

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.7.1"
mypy = "^1.10.0"
pytest = "^8.3.3"
pytest-xdist = "^3.6.1"
black = "^24.10.0"
types-pyyaml = "^6.0.12.20240917"
types-toml = "^0.10.8.20240310"
plotly = "^5.24.1"
types-redis = "^4.6.0.20241004"
transformers = "^4.45.2"
accelerate = { version = "*" }
vllm = "^0.8.5"
torch = { version = "*", source = "pytorch-cu124" }
ruff = "^0.12.8"

[[tool.poetry.source]]
name = "pytorch-cu124"
url = "https://download.pytorch.org/whl/cu124"
priority = "explicit"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["I", "E", "F"]

[tool.ruff.lint.extend-per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
plugins = "pydantic.mypy"
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["./tests"]
markers = [
    "gpu: needs a GPU runner, otherwise test can not be run",
    "cpu_slow: runs for a long time (on CPU)",
    "external_api: needs external services for execution",
    "vllm: tests that specifically require vLLM functionality",
]
filterwarnings = [
    "ignore::DeprecationWarning:datasets.utils._dill:",
]
